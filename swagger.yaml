openapi: 3.0.0
info:
  title: Sistema de controle de bicicletário (29/04/2023)
  description: Modelo da disciplina. Documentação relacionada ao sistema de controle de bicicletário. Toda a API está documentada neste arquivo de definição.
  contact:
    email: pasemes@uniriotec.br
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "1"
servers:
- url: https://virtserver.swaggerhub.com/BOBESPONJAHOKAGE_1/PM-MONITORIA/1
  description: SwaggerHub API Auto Mocking
tags:
- name: Aluguel
  description: Microsserviço aluguel
- name: Equipamento
  description: Microsserviço Equipamento
- name: Externo
  description: Microsserviço Externo
paths:
  /ciclista:
    post:
      tags:
      - Aluguel
      summary: Cadastrar um ciclista
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ciclista_body'
        required: true
      responses:
        "201":
          description: Ciclista cadastrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ciclista'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Requisição mal formada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /ciclista/{idCiclista}:
    get:
      tags:
      - Aluguel
      summary: Recupera dados de um ciclista
      parameters:
      - name: idCiclista
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Retorna ciclista solicitado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ciclista'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Requisição mal formada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
    put:
      tags:
      - Aluguel
      summary: Alterar dados de um ciclista
      parameters:
      - name: idCiclista
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoCiclista'
        required: true
      responses:
        "200":
          description: Dados atualizados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ciclista'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /ciclista/{idCiclista}/ativar:
    post:
      tags:
      - Aluguel
      summary: Ativar cadastro do ciclista
      parameters:
      - name: idCiclista
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: x-id-requisicao
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Ciclista ativado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ciclista'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /ciclista/{idCiclista}/permiteAluguel:
    get:
      tags:
      - Aluguel
      summary: "Verifica se o ciclista pode alugar uma bicicleta, já que só pode alugar uma por vez."
      parameters:
      - name: idCiclista
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: true se puder alugar e false caso contrário
          content:
            application/json:
              schema:
                type: boolean
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /ciclista/{idCiclista}/bicicletaAlugada:
    get:
      tags:
      - Aluguel
      summary: Obtém bicicleta alugada por um ciclista (ou vazio caso contrário)
      parameters:
      - name: idCiclista
        in: path
        description: UUID do ciclista
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Retorna bicicleta caso o ciclista tenha alugado ou vazio caso contrário.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bicicleta'
        "404":
          description: Ciclista não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /ciclista/existeEmail/{email}:
    get:
      tags:
      - Aluguel
      summary: Verifica se o e-mail já foi utilizado por algum ciclista.
      parameters:
      - name: email
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: True caso exista o email e false caso contrario.
          content:
            application/json:
              schema:
                type: boolean
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "400":
          description: Email não enviado como parâmetro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /funcionario:
    get:
      tags:
      - Aluguel
      summary: recupera funcionários cadastrados
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Funcionario'
    post:
      tags:
      - Aluguel
      summary: Cadastrar funcionário
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/funcionario_body'
        required: true
      responses:
        "200":
          description: Dados cadastrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Funcionario'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /funcionario/{idFuncionario}:
    get:
      tags:
      - Aluguel
      summary: Recupera funcionário
      parameters:
      - name: idFuncionario
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Dados recuperados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Funcionario'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
    put:
      tags:
      - Aluguel
      summary: Editar funcionário
      parameters:
      - name: idFuncionario
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoFuncionario'
        required: true
      responses:
        "200":
          description: Dados atualizados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Funcionario'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
    delete:
      tags:
      - Aluguel
      summary: Remover funcionário
      parameters:
      - name: idFuncionario
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Dados removidos
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /cartaoDeCredito/{idCiclista}:
    get:
      tags:
      - Aluguel
      summary: Recupera dados de cartão de crédito de um ciclista
      parameters:
      - name: idCiclista
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Dados do cartão
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartaoDeCredito'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
    put:
      tags:
      - Aluguel
      summary: Alterar dados de cartão de crédito de um ciclista
      parameters:
      - name: idCiclista
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoCartaoDeCredito'
        required: true
      responses:
        "200":
          description: Dados atualizados
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /bicicleta:
    get:
      tags:
      - Equipamento
      summary: recupera bicicletas cadastradas
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bicicleta'
    post:
      tags:
      - Equipamento
      summary: Cadastrar bicicleta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovaBicicleta'
        required: true
      responses:
        "200":
          description: Dados cadastrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bicicleta'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /bicicleta/integrarNaRede:
    post:
      tags:
      - Equipamento
      summary: colocar uma bicicleta nova ou retornando de reparo de volta na rede de totens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bicicleta_integrarNaRede_body'
        required: true
      responses:
        "200":
          description: Dados cadastrados
        "422":
          description: Dados Inválidos (ex status inválido da bicicleta ou tranca)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /bicicleta/retirarDaRede:
    post:
      tags:
      - Equipamento
      summary: retirar bicicleta para reparo ou aposentadoria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bicicleta_retirarDaRede_body'
        required: true
      responses:
        "200":
          description: Dados cadastrados
        "422":
          description: Dados Inválidos (ex status inválido da bicicleta ou tranca)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /bicicleta/{idBicicleta}:
    get:
      tags:
      - Equipamento
      summary: Obter bicicleta
      parameters:
      - name: idBicicleta
        in: path
        description: UUID da bicicleta
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Bicicleta encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bicicleta'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
    put:
      tags:
      - Equipamento
      summary: Editar bicicleta
      parameters:
      - name: idBicicleta
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovaBicicleta'
        required: true
      responses:
        "200":
          description: Dados atualizados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bicicleta'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
    delete:
      tags:
      - Equipamento
      summary: Remover bicicleta
      parameters:
      - name: idBicicleta
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Dados removidos
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /bicicleta/{idBicicleta}/status/{acao}:
    post:
      tags:
      - Equipamento
      summary: Alterar status da bicicleta
      parameters:
      - name: idBicicleta
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: acao
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: "enum['DISPONIVEL','EM_USO', 'NOVA', 'APOSENTADA', 'REPARO_SOLICITADO', 'EM_REPARO' ]"
      responses:
        "200":
          description: Ação bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bicicleta'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /totem:
    get:
      tags:
      - Equipamento
      summary: recupera totens cadastrados
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Totem'
    post:
      tags:
      - Equipamento
      summary: Incluir totem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/novoTotem'
        required: true
      responses:
        "200":
          description: Dados cadastrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Totem'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /tranca/integrarNaRede:
    post:
      tags:
      - Equipamento
      summary: colocar uma tranca nova ou retornando de reparo de volta na rede de totens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tranca_integrarNaRede_body'
        required: true
      responses:
        "200":
          description: Dados cadastrados
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /tranca/retirarDaRede:
    post:
      tags:
      - Equipamento
      summary: retirar uma tranca para aposentadoria ou reparo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tranca_retirarDaRede_body'
        required: true
      responses:
        "200":
          description: Dados cadastrados
        "422":
          description: Dados Inválidos (ex status inválido da tranca)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /totem/{idTotem}:
    put:
      tags:
      - Equipamento
      summary: Editar totem
      parameters:
      - name: idTotem
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/novoTotem'
        required: true
      responses:
        "200":
          description: Dados cadastrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Totem'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
    delete:
      tags:
      - Equipamento
      summary: Remover totem
      parameters:
      - name: idTotem
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Totem removido
        "404":
          description: Totem não encontrado
  /totem/{idTotem}/trancas:
    get:
      tags:
      - Equipamento
      summary: Listar trancas de um totem
      parameters:
      - name: idTotem
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tranca'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /totem/{idTotem}/bicicletas:
    get:
      tags:
      - Equipamento
      summary: Listar bicicletas de um totem
      parameters:
      - name: idTotem
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bicicleta'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /tranca:
    get:
      tags:
      - Equipamento
      summary: recupera trancas cadastradas
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tranca'
    post:
      tags:
      - Equipamento
      summary: Cadastrar tranca
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovaTranca'
        required: true
      responses:
        "200":
          description: Dados cadastrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tranca'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /tranca/{idTranca}:
    get:
      tags:
      - Equipamento
      summary: Obter tranca
      parameters:
      - name: idTranca
        in: path
        description: UUID ou número da tranca
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Tranca encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tranca'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
    put:
      tags:
      - Equipamento
      summary: Editar tranca
      parameters:
      - name: idTranca
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovaTranca'
        required: true
      responses:
        "200":
          description: Dados cadastrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tranca'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
    delete:
      tags:
      - Equipamento
      summary: Remover tranca
      parameters:
      - name: idTranca
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Tranca removida
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /tranca/{idTranca}/bicicleta:
    get:
      tags:
      - Equipamento
      summary: Obter bicicleta na tranca
      parameters:
      - name: idTranca
        in: path
        description: UUID ou número da tranca
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Tranca encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bicicleta'
        "404":
          description: Bicicleta não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
        "422":
          description: Id da tranca inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /tranca/{idTranca}/trancar:
    post:
      tags:
      - Equipamento
      summary: Realiza o trancamento da tranca alterando o status da mesma de acordo. Caso receba o id da bicleta no corpo do post também altera o status da mesma e associa a tranca à bicicleta.
      parameters:
      - name: idTranca
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/idTranca_trancar_body'
        required: false
      responses:
        "200":
          description: Ação bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tranca'
        "422":
          description: Dados Inválidos ou tranca já se encontra trancada
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /tranca/{idTranca}/destrancar:
    post:
      tags:
      - Equipamento
      summary: Realiza o destrancamento da tranca alterando o status da mesma de acordo. Caso receba o id da bicleta no corpo do post também altera o status da mesma e desassocia a tranca à bicicleta.
      parameters:
      - name: idTranca
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/idTranca_destrancar_body'
        required: false
      responses:
        "200":
          description: Ação bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tranca'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /tranca/{idTranca}/status/{acao}:
    post:
      tags:
      - Equipamento
      summary: Alterar status da tranca
      parameters:
      - name: idTranca
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: acao
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: "ENUM['DESTRANCAR', 'TRANCAR']"
      responses:
        "200":
          description: Ação bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tranca'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /enviarEmail:
    post:
      tags:
      - Externo
      summary: Notificar via email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enviarEmail_body'
        required: true
      responses:
        "200":
          description: Externo solicitada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        "404":
          description: E-mail não existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
        "422":
          description: E-mail com formato inválido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /cobranca:
    post:
      tags:
      - Externo
      summary: Realizar cobrança
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cobranca_body'
        required: true
      responses:
        "200":
          description: Cobrança solicitada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cobranca'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /processaCobrancasEmFila:
    post:
      tags:
      - Externo
      summary: Processa todas as cobranças atrasadas colocadas em fila previamente.
      responses:
        "200":
          description: Processamento concluído com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cobranca'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /filaCobranca:
    post:
      tags:
      - Externo
      summary: Inclui cobrança na fila de cobrança. Cobranças na fila serão cobradas de tempos em tempos.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filaCobranca_body'
        required: true
      responses:
        "200":
          description: Cobrança Incluida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cobranca'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /cobranca/{idCobranca}:
    get:
      tags:
      - Externo
      summary: Obter cobrança
      parameters:
      - name: idCobranca
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Cobrança
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cobranca'
        "404":
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
  /aluguel:
    post:
      tags:
      - Aluguel
      summary: Realizar aluguel
      description: Realiza uma cobrança de um valor fixo e em caso de aprovada a mesma libera a tranca com a bicicleta escolhida pelo ciclista. A mesma também notifica o ciclista da retirada da bicicleta.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aluguel_body'
        required: true
      responses:
        "200":
          description: Aluguel realizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aluguel'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /devolucao:
    post:
      tags:
      - Aluguel
      summary: "Realizar devolução, sendo invocado de maneira automática pelo hardware do totem ao encostar a bicicleta na tranca."
      description: "Ao se devolver a bicicleta deve-se alterar o estado da tranca, e calcular possíveis custos adicionais a ser pago pelo ciclista e recorre a fila de cobrança para realiza-lo, notificando o ciclista da devolução e da taxa extra paga."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/devolucao_body'
        required: true
      responses:
        "200":
          description: Devolucao realizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Devolucao'
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
  /validaCartaoDeCredito:
    post:
      tags:
      - Externo
      summary: Valida um cartão de crédito
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoCartaoDeCredito'
        required: true
      responses:
        "200":
          description: Dados atualizados
        "422":
          description: Dados Inválidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Erro'
components:
  schemas:
    NovoCiclista:
      type: object
      properties:
        nome:
          type: string
        nascimento:
          type: string
          format: date
        cpf:
          pattern: "\\d{11}"
          type: string
        passaporte:
          $ref: '#/components/schemas/NovoCiclista_passaporte'
        nacionalidade:
          type: string
          format: "enum['BRASILEIRO', 'ESTRANGEIRO']"
        email:
          type: string
          format: email
        urlFotoDocumento:
          type: string
          format: uri
    Ciclista:
      allOf:
      - type: object
        properties:
          id:
            type: integer
          status:
            type: string
            format: "enum['ATIVO', 'INATIVO', 'AGUARDANDO_CONFIRMACAO']"
      - $ref: '#/components/schemas/NovoCiclista'
    NovoFuncionario:
      type: object
      properties:
        senha:
          type: string
        confirmacaoSenha:
          type: string
        email:
          type: string
          format: email
        nome:
          type: string
        idade:
          type: integer
        funcao:
          type: string
        cpf:
          type: string
    Funcionario:
      allOf:
      - type: object
        properties:
          matricula:
            type: string
            format: integer
      - $ref: '#/components/schemas/NovoFuncionario'
    NovoCartaoDeCredito:
      required:
      - cvv
      - nomeTitular
      - numero
      - validade
      type: object
      properties:
        nomeTitular:
          type: string
        numero:
          pattern: \d+
          type: string
        validade:
          type: string
          format: date
        cvv:
          pattern: "\\d{3,4}"
          type: string
    CartaoDeCredito:
      allOf:
      - type: object
        properties:
          id:
            type: integer
      - $ref: '#/components/schemas/NovoCartaoDeCredito'
    NovaBicicleta:
      type: object
      properties:
        marca:
          type: string
        modelo:
          type: string
        ano:
          type: string
          format: year
        numero:
          type: integer
        status:
          type: string
          format: "enum['DISPONÍVEL','EM_USO', 'NOVA', 'APOSENTADA', 'REPARO_SOLICITADO', 'EM_REPARO' ]"
    Bicicleta:
      allOf:
      - type: object
        properties:
          id:
            type: integer
      - $ref: '#/components/schemas/NovaBicicleta'
    novoTotem:
      required:
      - localizacao
      type: object
      properties:
        localizacao:
          type: string
          format: coordinates
        descricao:
          type: string
          format: string
    Totem:
      allOf:
      - type: object
        properties:
          id:
            type: integer
      - $ref: '#/components/schemas/novoTotem'
    NovaTranca:
      type: object
      properties:
        numero:
          minimum: 0
          exclusiveMinimum: true
          type: integer
        localizacao:
          type: string
          format: coordinates
        anoDeFabricacao:
          type: string
          format: year
        modelo:
          type: string
        status:
          type: string
          format: "enum['LIVRE', 'OCUPADA', 'NOVA', 'APOSENTADA', 'EM_REPARO']"
    Tranca:
      allOf:
      - type: object
        properties:
          id:
            type: integer
          bicicleta:
            type: integer
      - $ref: '#/components/schemas/NovaTranca'
    NovoEmail:
      type: object
      properties:
        email:
          type: string
        assunto:
          type: string
        mensagem:
          type: string
    Email:
      allOf:
      - type: object
        properties:
          id:
            type: integer
      - $ref: '#/components/schemas/NovoEmail'
    NovaCobranca:
      type: object
      properties:
        valor:
          multipleOf: 0.01
          minimum: 0
          exclusiveMinimum: true
          type: number
        ciclista:
          type: integer
    Cobranca:
      allOf:
      - type: object
        properties:
          id:
            type: integer
          status:
            type: string
            format: "enum['PENDENTE', 'PAGA', 'FALHA', 'CANCELADA', 'OCUPADA']"
          horaSolicitacao:
            type: string
            format: date-time
          horaFinalizacao:
            type: string
            format: date-time
      - $ref: '#/components/schemas/NovaCobranca'
    NovoAluguel:
      type: object
      properties:
        ciclista:
          type: integer
        trancaInicio:
          type: integer
    Aluguel:
      allOf:
      - type: object
        properties:
          bicicleta:
            type: integer
          horaInicio:
            type: string
            format: date-time
          trancaFim:
            type: integer
          horaFim:
            type: string
            format: date-time
          cobranca:
            type: integer
      - $ref: '#/components/schemas/NovoAluguel'
    NovoDevolucao:
      type: object
      properties:
        ciclista:
          type: integer
        trancaFim:
          type: integer
    Devolucao:
      allOf:
      - type: object
        properties:
          bicicleta:
            type: integer
          horaInicio:
            type: string
            format: date-time
          trancaFim:
            type: integer
          horaFim:
            type: string
            format: date-time
          cobranca:
            type: integer
      - $ref: '#/components/schemas/NovoDevolucao'
    Erro:
      required:
      - codigo
      - mensagem
      type: object
      properties:
        codigo:
          type: string
        mensagem:
          type: string
    ciclista_body:
      required:
      - ciclista
      - meioDePagamento
      type: object
      properties:
        ciclista:
          allOf:
          - $ref: '#/components/schemas/NovoCiclista'
          - required:
            - email
            - nacionalidade
            - nascimento
            - nome
            - senha
            properties:
              senha:
                type: string
        meioDePagamento:
          $ref: '#/components/schemas/NovoCartaoDeCredito'
    funcionario_body:
      allOf:
      - $ref: '#/components/schemas/NovoFuncionario'
      - required:
        - cpf
        - documento
        - email
        - funcao
        - idade
        - nome
        - senha
    bicicleta_integrarNaRede_body:
      type: object
      properties:
        idTranca:
          type: integer
        idBicicleta:
          type: integer
        idFuncionario:
          type: integer
    bicicleta_retirarDaRede_body:
      type: object
      properties:
        idTranca:
          type: integer
        idBicicleta:
          type: integer
        idFuncionario:
          type: integer
        statusAcaoReparador:
          type: string
          description: "Status escolhido como destino do equipamento, uma vez que o reparo tenha sido solicitado anteriormente."
          format: "enum['APOSENTADA', 'EM_REPARO' ]"
    tranca_integrarNaRede_body:
      type: object
      properties:
        idTotem:
          type: integer
        idTranca:
          type: integer
        idFuncionario:
          type: integer
    tranca_retirarDaRede_body:
      type: object
      properties:
        idTotem:
          type: integer
        idTranca:
          type: integer
        idFuncionario:
          type: integer
        statusAcaoReparador:
          type: string
          description: "Status escolhido como destino do equipamento, uma vez que o reparo tenha sido solicitado anteriormente."
          format: "enum['APOSENTADA', 'EM_REPARO' ]"
    idTranca_trancar_body:
      type: object
      properties:
        bicicleta:
          type: integer
    idTranca_destrancar_body:
      type: object
      properties:
        bicicleta:
          type: integer
    enviarEmail_body:
      allOf:
      - $ref: '#/components/schemas/NovoEmail'
      - required:
        - email
        - mensagem
    cobranca_body:
      allOf:
      - $ref: '#/components/schemas/NovaCobranca'
      - required:
        - ciclista
        - valor
    filaCobranca_body:
      allOf:
      - $ref: '#/components/schemas/NovaCobranca'
      - required:
        - ciclista
        - valor
    aluguel_body:
      allOf:
      - $ref: '#/components/schemas/NovoAluguel'
      - required:
        - ciclista
        - trancaInicio
    devolucao_body:
      type: object
      properties:
        idTranca:
          type: integer
        idBicicleta:
          type: integer
    NovoCiclista_passaporte:
      type: object
      properties:
        numero:
          type: string
        validade:
          type: string
          format: date
        pais:
          pattern: "[A-Z]{2}"
          type: string
          format: countrycode
